#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_data <- semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_data <- semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
semester_data
#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
#identify the transitioned year for each university
transition_year <- semester_data |>
group_by(unitid) |>
mutate(prev_semester = lag(semester),
prev_quarter = lag(quarter))  |>
filter(prev_semester == 0 & semester == 1 & prev_quarter == 1 & quarter == 0) |>
rename(yearofsem = year) |>
select (unitid, instnm, yearofsem)
transition_year
#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
library("tidyverse")
#load the dataset
semester_data_1 <- read_csv("semester_dummy/semester_data_1.csv")
semester_data_2 <- read_csv("semester_dummy/semester_data_2.csv")
semester_data_1
semester_data_2
#rename the column names in "semester_data_1"
semester_data_1 <- semester_data_1 |>
rename (unitid = x1, instnm = x2, semester = x3, quarter = x4, year = x5, Y = x6)
semester_data_1
#convert the character into double (numeric)
#then, delete the first row of the "semester_data_1"
semester_data_1 <- semester_data_1 |>
mutate(unitid = as.numeric(unitid), semester = as.numeric(semester), quarter = as.numeric(quarter), year = as.numeric(year), Y = as.numeric(Y)) |>
slice(-1)
semester_data_1
#rename the column names in "semester_data_2"
semester_data_2 <- semester_data_2 |>
rename (unitid = x1, instnm = x2, semester = x3, quarter = x4, year = x5, Y = x6)
semester_data_2
#join the two data sets with bind_rows() because they have exactly the same columns
semester_data <- bind_rows(semester_data_1, semester_data_2)
semester_data
#delete the column "Y"
semester_data <- semester_data |>
select (-Y)
semester_data
#identify the transitioned year for each university
transition_year <- semester_data |>
group_by(unitid) |>
mutate(prev_semester = lag(semester),
prev_quarter = lag(quarter))  |>
filter(prev_semester == 0 & semester == 1 & prev_quarter == 1 & quarter == 0) |>
rename(yearofsem = year) |>
select (unitid, instnm, yearofsem)
transition_year
#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_dummy <- semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_dummy <- semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
semester_dummy
semester_dummy |>
group_by(unitid) |>
mutate(after = if_else(year < yaeerofsem, "0", "1"))
semester_dummy |>
group_by(unitid) |>
mutate(after = if_else(year < yearofsem, "0", "1"))
semester_dummy <- semester_dummy |>
group_by(unitid) |>
mutate(after = if_else(year < yearofsem, "0", "1"))
cleaned_semester_dummy <- semester_dummy |>
group_by(unitid) |>
mutate(after = if_else(year < yearofsem, "0", "1"))
cleaned_semester_dummy
#save this cleaned data set "cleaned_semester_dummy" as a .csv file
write.csv(cleaned_semester_dummy, "cleaned_semester_dummy", row.names = TRUE)
###Gradrate Data
read_csv("outcome_csv/1991.csv")
###Gradrate Data
for (i in 1991:2016)
read_csv("outcome_csv/"i".csv")
###Gradrate Data
for (i in 1991:2016) {
read_csv("outcome_csv/"i".csv")
###Gradrate Data
for (i in 1991:2016) {
read_csv("outcome_csv/i.csv")
}
###Gradrate Data
for (i in 1991:2016) {
gradrate_data <- read_csv("outcome_csv/", i, ".csv")
}
###Gradrate Data
for (i in 1991:2016) {
filename <- paste0("outcome_csv/", i, ".csv")
}
###Gradrate Data
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
gradrate_data <- read_csv(filename)
###Gradrate Data
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
gradrate_data <- read_csv(filename)
gradrate
###Gradrate Data
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
gradrate_data <- read_csv(filename)
gradrate_data |>
bind_rows (gradrate_data)
###Gradrate Data
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
read_csv(filename)
###Gradrate Data
#create an empty list to store the data
data_list <- list()
#loop through each year from 1991 to 2016
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
data_list <- read_csv(filename)
###Gradrate Data
#create an empty list to store the data
data_list <- list()
#loop through each year from 1991 to 2016
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
data_list <- read_csv(filename)
data_list
###Gradrate Data
#create an empty list to store the data
data_list <- list()
#loop through each year from 1991 to 2016
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
data_list[[as.character(i)]] <- read_csv(filename)
data_list
###Gradrate Data
#create an empty list to store the data
gradrate_list <- list()
#loop through each year from 1991 to 2016
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
gradrate_list[[as.character(i)]] <- read_csv(filename)
combined_gradrate <- gradrate_list(bind_rows)
###Gradrate Data
#create an empty list to store the data
gradrate_list <- list()
#loop through each year from 1991 to 2016
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
gradrate_list[[as.character(i)]] <- read_csv(filename) |>
bindrows()
###Gradrate Data
#create an empty list to store the data
gradrate_list <- list()
#loop through each year from 1991 to 2016
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
gradrate_list[[as.character(i)]] <- read_csv(filename) |>
bind_rows()
###Gradrate Data
#create an empty list to store the data
gradrate_list <- list()
#loop through each year from 1991 to 2016
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
}
gradrate_list[[as.character(i)]] <- read_csv(filename) |>
bind_rows()
gradrate_list
###Gradrate Data
read_csv("outcome_csv/1991.csv")
#create an empty list to store the data
#gradrate_list <- list()
#loop through each year from 1991 to 2016
#for (i in 1991:2016) {
#construct the filename
#filename <- paste0("outcome_csv/", i, ".csv")
#}
#gradrate_list[[as.character(i)]] <- read_csv(filename) |>
#bind_rows()
#gradrate_list
###Gradrate Data
read_csv("outcome_csv/1991.csv")
read_csv("outcome_csv/1992.csv")
read_csv("outcome_csv/1993.csv")
read_csv("outcome_csv/1994.csv")
###Gradrate Data
#create an empty list to store the data
gradrate_list <- list()
#loop through each year from 1991 to 2016
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
read_csv(filename)
}
###Gradrate Data
#create an empty list to store the data
gradrate_list <- list()
#loop through each year from 1991 to 2016
for (i in 1991:2016) {
#construct the filename
filename <- paste0("outcome_csv/", i, ".csv")
gradrate_list[[as.character(i)]] <- read_csv(filename)
}
###Gradrate Data
#create an empty list to store the data
gradrate_list <- list()
#loop through each year from 1991 to 2016
#for (i in 1991:2016) {
#construct the filename
#filename <- paste0("outcome_csv/", i, ".csv")
#gradrate_list[[as.character(i)]] <- read_csv(filename)
}
###Gradrate Data
#create an empty list to store the data
gradrate_list <- list()
#loop through each year from 1991 to 2016
#for (i in 1991:2016) {
#construct the filename
#filename <- paste0("outcome_csv/", i, ".csv")
#gradrate_list[[as.character(i)]] <- read_csv(filename)
#}
library(readr)
clean_outcome_duplicate <- read_csv("cleaning/clean_outcome_duplicate.csv")
View(clean_outcome_duplicate)
##save this cleaned data set "cleaned_semester_dummy" as a .csv file
write.csv(cleaned_semester_dummy, "cleaned_semester_dummy", row.names = TRUE)
##save this cleaned data set "cleaned_semester_dummy" as a .csv file
write_csv(cleaned_semester_dummy, "cleaned_semester_dummy_aomi", row.names = TRUE)
##save this cleaned data set "cleaned_semester_dummy" as a .csv file
write_csv(cleaned_semester_dummy, "cleaned_semester_dummy_aomi")
##save this cleaned data set "cleaned_semester_dummy" as a .csv file
write_csv(cleaned_semester_dummy, "cleaned_semester_dummy_aomi.csv")
##save this cleaned data set "cleaned_semester_dummy" as a .csv file
#remember to add ".csv" at the end
write_csv(cleaned_semester_dummy, "cleaned_semester_dummy_aomi.csv")
library(readr)
covariates <- read_csv("raw/covariates_csv_aomi/covariates.csv")
View(covariates)
###Covariates Data
covariates <- read_csv("raw/covariates_csv_aomi")
###Covariates Data
covariates <- read_csv("covariates_csv_aomi/covariates.csv")
###Covariates Data
covariates <- read_csv("covariates.csv")
###Covariates Data
covariates <- read_csv("raw/covariates_csv_aomi/covariates.csv")
library("tidyverse")
###Semester Data
#load the dataset
semester_data_1 <- read_csv("semester_dummy/semester_data_1.csv")
library("tidyverse")
###Semester Data
#load the dataset
semester_data_1 <- read_csv("raw/semester_dummy/semester_data_1.csv")
semester_data_2 <- read_csv("raw/semester_dummy/semester_data_2.csv")
semester_data_1
semester_data_2
#rename the column names in "semester_data_1"
semester_data_1 <- semester_data_1 |>
rename (unitid = x1, instnm = x2, semester = x3, quarter = x4, year = x5, Y = x6)
semester_data_1
#convert the character into double (numeric)
#then, delete the first row of the "semester_data_1"
semester_data_1 <- semester_data_1 |>
mutate(unitid = as.numeric(unitid), semester = as.numeric(semester), quarter = as.numeric(quarter), year = as.numeric(year), Y = as.numeric(Y)) |>
slice(-1)
semester_data_1
#rename the column names in "semester_data_2"
semester_data_2 <- semester_data_2 |>
rename (unitid = x1, instnm = x2, semester = x3, quarter = x4, year = x5, Y = x6)
semester_data_2
#join the two data sets with bind_rows() because they have exactly the same columns
semester_data <- bind_rows(semester_data_1, semester_data_2)
semester_data
#delete the column "Y"
semester_data <- semester_data |>
select (-Y)
semester_data
#identify the transitioned year for each university
transition_year <- semester_data |>
group_by(unitid) |>
mutate(prev_semester = lag(semester),
prev_quarter = lag(quarter))  |>
filter(prev_semester == 0 & semester == 1 & prev_quarter == 1 & quarter == 0) |>
rename(yearofsem = year) |>
select (unitid, instnm, yearofsem)
transition_year
#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_dummy <- semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
semester_dummy
#finalizing the cleaning of the semester data
#create a dummy variable which shows 0 if semesters were yet to be introduced and 1 if already introduced
cleaned_semester_dummy <- semester_dummy |>
group_by(unitid) |>
mutate(after = if_else(year < yearofsem, "0", "1"))
cleaned_semester_dummy
##save this cleaned data set "cleaned_semester_dummy" as a .csv file
#remember to add ".csv" at the end
write_csv(cleaned_semester_dummy, "cleaned_semester_aomi.csv")
###Gradrate Data
#use the intermediate data for the tentative use
#create an empty list to store the data
gradrate_list <- list()
#loop through each year from 1991 to 2016
#for (i in 1991:2016) {
#construct the filename
#filename <- paste0("outcome_csv/", i, ".csv")
#gradrate_list[[as.character(i)]] <- read_csv(filename)
#}
###Covariates Data
covariates <- read_csv("raw/covariates_csv_aomi/covariates.csv")
covariates
###Covariates Data
#load the data
covariates <- read_csv("raw/covariates_csv_aomi/covariates.csv")
covariates
#rename the column name from "university_id" into "unitid
#rename the column name from "university_id" into "unitid"
covariates |>
rename(unitid = university_id)
#rename the column name from "university_id" into "unitid"
covariates <- covariates |>
rename(unitid = university_id)
#rename the column name from "university_id" into "unitid"
covariates <- covariates |>
rename(unitid = university_id)
###Covariates Data
#load the data
covariates <- read_csv("raw/covariates_csv_aomi/covariates.csv")
covariates
#rename the column name from "university_id" into "unitid"
covariates <- covariates |>
rename(unitid = university_id)
covariates
#remove the "aaaa" in the column "unitid" using str_remove()
covariates |>
str_remove(unitid, "aaaa")
#remove the "aaaa" in the column "unitid" using str_remove()
covariates |>
str_remove_all("aaaa")
#remove the "aaaa" in the column "unitid" using str_remove()
covariates <- covariates |>
str_remove_all("aaaa")
head(covariates)
#remove the "aaaa" in the column "unitid" using str_remove()
covariates <- covariates |>
str_remove_all("aaaa")
head(covariates[1:5])
#create a new column called "unitid" where each row's values have "aaaa" removed, using str_remove()
covariates <- covariates |>
mutate(unitid = str_remove(unitid, "aaaa"))
covariates <- covariates |>
str_remove("aaaa")
covariates
covariates <- covariates |>
str_remove("aaaa")
View(covariates)
#rename the column name from "university_id" into "unitid"
covariates |>
mutate(unitid = as.numeric(unitid)
#rename the column name from "university_id" into "unitid"
covariates |>
mutate(unitid = as.numeric(unitid))
#rename the column name from "university_id" into "unitid"
covariates |>
rename(unitid = university_id)
###Covariates Data
#load the data
covariates <- read_csv("raw/covariates_csv_aomi/covariates.csv")
covariates
#rename the column name from "university_id" into "unitid"
covariates |>
rename(unitid = university_id)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
library("tidyverse")
###Semester Data
#load the dataset
semester_data_1 <- read_csv("raw/semester_dummy/semester_data_1.csv")
semester_data_2 <- read_csv("raw/semester_dummy/semester_data_2.csv")
semester_data_1
semester_data_2
#rename the column names in "semester_data_1"
semester_data_1 <- semester_data_1 |>
rename (unitid = x1, instnm = x2, semester = x3, quarter = x4, year = x5, Y = x6)
semester_data_1
#convert the character into double (numeric)
#then, delete the first row of the "semester_data_1"
semester_data_1 <- semester_data_1 |>
mutate(unitid = as.numeric(unitid), semester = as.numeric(semester), quarter = as.numeric(quarter), year = as.numeric(year), Y = as.numeric(Y)) |>
slice(-1)
semester_data_1
#rename the column names in "semester_data_2"
semester_data_2 <- semester_data_2 |>
rename (unitid = x1, instnm = x2, semester = x3, quarter = x4, year = x5, Y = x6)
semester_data_2
#join the two data sets with bind_rows() because they have exactly the same columns
semester_data <- bind_rows(semester_data_1, semester_data_2)
semester_data
#delete the column "Y"
semester_data <- semester_data |>
select (-Y)
semester_data
#identify the transitioned year for each university
transition_year <- semester_data |>
group_by(unitid) |>
mutate(prev_semester = lag(semester),
prev_quarter = lag(quarter))  |>
filter(prev_semester == 0 & semester == 1 & prev_quarter == 1 & quarter == 0) |>
rename(yearofsem = year) |>
select (unitid, instnm, yearofsem)
transition_year
#use left_join to merge the two data sets ("semester_data" and "transition_year")
semester_dummy <- semester_data |>
left_join (transition_year, by = c("unitid", "instnm"))
semester_dummy
#finalizing the cleaning of the semester data
#create a dummy variable which shows 0 if semesters were yet to be introduced and 1 if already introduced
cleaned_semester_dummy <- semester_dummy |>
group_by(unitid) |>
mutate(after = if_else(year < yearofsem, "0", "1"))
cleaned_semester_dummy
##save this cleaned data set "cleaned_semester_dummy" as a .csv file
#remember to add ".csv" at the end
write_csv(cleaned_semester_dummy, "cleaned_semester_aomi.csv")
###Gradrate Data
#use the intermediate data for the tentative use
#create an empty list to store the data
#gradrate_list <- list()
#loop through each year from 1991 to 2016
#for (i in 1991:2016) {
#construct the filename
#filename <- paste0("outcome_csv/", i, ".csv")
#gradrate_list[[as.character(i)]] <- read_csv(filename)
#}
###Covariates Data
#load the data
covariates <- read_csv("raw/covariates_csv_aomi/covariates.csv")
covariates
#rename the column name from "university_id" into "unitid"
#then, create a new column with the same name while removing "aaaa" from each row
covariates <- covariates |>
rename(unitid = university_id) |>
mutate(unitid = str_remove_all(unitid, "aaaa"))
covariates
#see all the unique values in the "category" column
#unique(covariates$category)
#use "pivot_wider" to transfer the dataset
covariates <- covariates |>
pivot_wider(names_from = category,
values_from = value)
covariates
#recall "cleaned_semester_dummy"
cleaned_semester_dummy
#load the "outcome"
outcome_data <- read_csv("cleaning/clean_outcome_duplicate.csv") |>
select (-...1)
outcome_data
#see all the unique values existing in the "year" column of "cleaned_semester_dummy" data
unique(cleaned_semester_dummy$year)
#see all the unique values existing in the "year" column of "outcome" data
unique(outcome$year)
#see all the unique values existing in the "year" column of "cleaned_semester_dummy" data
unique(cleaned_semester_dummy$year)
#see all the unique values existing in the "year" column of "outcome" data
unique(outcome_data$year)
#limit the year duration for "covariates" data
covariates <- covariates |>
group_by(unitid) |>
filter (year >= 1991 & year != 1994 & year <= 2010)
covariates
tinytex::reinstall_tinytex(repository = "illinois")
